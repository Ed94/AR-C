Engine.Platform_Wind.source


pub fn :

(Console) -> bool :
{
	alias : 
	ReassignPtr : File:: ReassignPtr;
	BufferMode  : File:: BufferMode;
	SetBuffer   : File:: SetBuffer;
	Access      : File:: Access;
	CF_In       : Console:: Filename:: In;
	CF_Out      : Console:: Filename:: Out;
	CF_Null     : Console:: Filename:: Null;
	CS_In       : Console:: Stream:: In;
	CS_Out      : Console:: Stream:: Out;
	CS_Err      : Console:: Stream:: Err;
	;

	Bind_IOBuffers :
	{
		stack : dummyFile : ptr<File> = null ;

		ReassignPtr(dummyFile.ptr, CF_In , Access:: Read , CS_In );
		ReassignPtr(dummyFile.ptr, CF_Out, Access:: Write, CS_Out);
		ReassignPtr(dummyFile.ptr, CF_Out, Access:: Write, CS_Err);

		stack : result : ErrorNo = -1 ;

		// Redirect standard input if the console has an input handle	
		if StdHandle:: Get(Input) != StdHandle:: Invalid :
		{
			result = ReassignPtr(dummyFile.ptr, CF_In , Access:: Read , CS_In)

			if result != 0 :
			-> false
			;
			else :
				SetBuffer(CS_In, null, BufferMode:: NoBuffer, 0);
			;
		};

		// Redirect standard output if the console has an output handle
		if StdHandle:: Get(Output) != StdHandle:: Invalid :
		{
			result = ReassignPtr(dummyFile.ptr, CF_Out , Access:: Write , CS_Out)

			if result != 0 :
			-> false
			;
			else :
				SetBuffer(CS_Out, null, BufferMode:: NoBuffer, 0);
			;
		};

		// Redirect standard error if the console has an error handle
		if StdHandle:: Get(Error) != StdHandle:: Invalid :
		{
			result = ReassignPtr(dummyFile.ptr, CF_Out , Access:: Write , CS_Err)

			if result != 0 :
			-> false
			;
			else :
				SetBuffer(CS_Err, null, BufferMode:: NoBuffer, 0);
			;
		};

	->true;
	};

	Unbind_IOBuffers :
	{
		stack : 
			dummyFile : ptr<File> = null;
			result    : ErrorNo   = -1  ;
		;

		// Just to be safe, redirect standard IO to NUL before releasing.

		// Redirect standard input to null
		result = ReassignPtr(dummyFile.ptr, CF_Null , Access:: Read, CS_In)

		if result != 0 :
		-> false
		;
		else :
			SetBuffer(CS_In, null, BufferMode:: NoBuffer, 0);
		;

		// Redirect standard output to null
		result = ReassignPtr(dummyFile.ptr, CF_Null , Access:: Write, CS_Out)

		if result != 0 :
		-> false
		;
		else :
			SetBuffer(CS_Out, null, BufferMode:: NoBuffer, 0);
		;

		// Redirect standard error to null
		result = ReassignPtr(dummyFile.ptr, CF_Null , Access:: Write, CS_Err)

		if result != 0 :
		-> false
		;
		else :
			SetBuffer(CS_Err, null, BufferMode:: NoBuffer, 0);
		;
	-> true;
	};

	RequestConsole : -> AllocConsole(); ;
};


GetKeySignal(_key : EVirtualKey) :
{
	if GetAsyncKeyState(_key) & 0x8000 : 
		-> true;
	;
	else :
		-> false;
	;
};


Entrypoint :
{	
	WinMain
	(
		hInstance     : InstHandle, 
		hPrevInstance : InstHandle, 
		pCmdLine      : PStr, 
		nCmdShow      : s32
	) 
	-> s32 : -> Execution:: Entrypoint() ;
};

;